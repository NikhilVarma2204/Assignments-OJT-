mongoimport --db population --collection zipcodes --file zip.json
use population
//Atlanta population
db.zipcodes.find({$and: [{city: 'ATLANTA'},{state: 'GA'}]}).pretty()
db.zipcodes.aggregate({$match: {$and: [{city: 'ATLANTA'},{state: 'GA'}]}})
db.zipcodes.aggregate([{$match: {city: 'ATLANTA'}},{$group: {_id: '$city',total: {$sum:'$pop'}}}])
//population bby state
db.zipcodes.aggregate([{$match: {}},{$group: {_id: '$city',total: {$sum:'$pop'}}}])
db.zipcodes.aggregate([{$group: {_id: '$city',total: {$sum: '$pop'}}},{$sort: {pop: -1}}])
db.zipcodes.aggregate([{$group: {_id: '$city',total: {$sum: '$pop'}}},{$sort: {pop: -1}},{$limit: 3}])
//population by city
db.zipcodes.aggregate([{$match: {}},{$group:
{_id:{city: '$city',state: '$state'},total: {$sum: '$pop'}
}])

db.zipcodes.aggregate([{$match: {}},{$group:
{_id:{city: '$city',state: '$state'},total: {$sum: '$pop'}
},{$sort: -1}])

db.zipcodes.aggregate([{$match: {}},{$group:
{_id:{city: '$city',state: '$state'},total: {$sum: '$pop'}
},{$sort: -1},{$limit: 3}])
//bonus
db.zipcodes.aggregate([{$match: {state: 'Texas'}},{$group: {_id: '$city',total: {$sum: '$pop'}}},{$sort: -1},{$limit: 3}])
db.zipcodes.aggregate([{$match: {}},{$group: {_id:'$state',average:{$avg: '$pop'}}}])
db.zipcodes.aggregate([{$match: {}},{$group: {_id:'$state',average:{$avg: '$pop'}}},{$sort: {average: -1}},{$limit: 3}])
